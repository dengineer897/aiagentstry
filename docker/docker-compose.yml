version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: taskflow_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_files:/var/www/static:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - taskflow

  frontend:
    build: ./frontend
    container_name: taskflow_frontend
    expose:
      - "3000"
    volumes:
      - static_files:/app/build/static
    restart: unless-stopped
    networks:
      - taskflow

  backend:
    build: ./backend
    container_name: taskflow_backend
    expose:
      - "8000"
    environment:
      - DJANGO_SETTINGS_MODULE=taskflow.settings.production
      - DATABASE_URL=postgresql://taskflow:${DB_PASSWORD}@postgres:5432/taskflow
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/taskflow
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - static_files:/app/static
      - media_files:/app/media
    depends_on:
      - postgres
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - taskflow

  celery-worker:
    build: ./backend
    container_name: taskflow_celery_worker
    command: celery -A taskflow worker -l info -c 2
    environment:
      - DJANGO_SETTINGS_MODULE=taskflow.settings.production
      - DATABASE_URL=postgresql://taskflow:${DB_PASSWORD}@postgres:5432/taskflow
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/taskflow
    depends_on:
      - postgres
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - taskflow

  celery-beat:
    build: ./backend
    container_name: taskflow_celery_beat
    command: celery -A taskflow beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=taskflow.settings.production
      - DATABASE_URL=postgresql://taskflow:${DB_PASSWORD}@postgres:5432/taskflow
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - taskflow

  postgres:
    image: postgres:15
    container_name: taskflow_postgres
    environment:
      - POSTGRES_DB=taskflow
      - POSTGRES_USER=taskflow
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    ports:
      - "127.0.0.1:5432:5432"
    restart: unless-stopped
    networks:
      - taskflow

  redis:
    image: redis:7-alpine
    container_name: taskflow_redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    restart: unless-stopped
    networks:
      - taskflow

  mongodb:
    image: mongo:6
    container_name: taskflow_mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "127.0.0.1:27017:27017"
    restart: unless-stopped
    networks:
      - taskflow

  # Lightweight monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: taskflow_prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - taskflow

  grafana:
    image: grafana/grafana:latest
    container_name: taskflow_grafana
    ports:
      - "127.0.0.1:3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - taskflow

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:
  static_files:
  media_files:

networks:
  taskflow:
    driver: bridge